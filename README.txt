# anomaly_sniffer - руководство пользователя

## 1. Режим обучения (train)
Этот режим используется для обучения нейронной сети на данных, которые считаются "нормальным" трафиком. В результате обучения создаются файлы модели и объекта-масштабировщика, которые затем используются для обнаружения аномалий.

### Синтаксис команды:
`python main.py train --data-file <путь_к_файлу> [опции]`

### Обязательный аргумент:
* `--data-file <путь_к_файлу>`: Путь к файлу с данными в формате CSV, на которых будет производиться обучение.

### Опции:
* `--time-step <число>`: Размер временного шага для последовательностей, используемых в нейронной сети. По умолчанию: 10.
* `--epochs <число>`: Количество эпох обучения. По умолчанию: 50.
* `--batch-size <число>`: Размер пакета для обучения. По умолчанию: 16.
* `--model-dir <папка>`: Директория для сохранения обученных файлов модели и scaler. По умолчанию: `models`.

---

## 2. Режим тестирования (test)
Этот режим используется для анализа сетевого трафика в реальном времени с помощью уже обученной модели. Программа перехватывает трафик, вычисляет метрики и определяет, являются ли они аномальными.

### Синтаксис команды:
`python main.py test --interface <интерфейс> --network <сеть> --threshold <порог> [опции]`

### Ключевые параметры и их разъяснение:
1.  **`--interface <интерфейс>` (Обязательный)**:
    * **Разъяснение**: Указывает, какой сетевой интерфейс будет "прослушиваться". Например, `eth0` для Ethernet или `Wi-Fi` для беспроводной сети. Модуль `sniffer.py` использует **Scapy** для захвата пакетов только с этого интерфейса.

2.  **`--network <сеть>` (Обязательный)**:
    * **Разъяснение**: Задаёт диапазон IP-адресов в формате **CIDR** (например, `192.168.1.0/24`), трафик для которых будет анализироваться. Это позволяет фильтровать пакеты и обрабатывать только те, которые относятся к вашей локальной сети.

3.  **`--threshold <порог>` (Обязательный)**:
    * **Разъяснение**: Это числовое значение ошибки реконструкции, которое служит **порогом для определения аномалий**. Если ошибка, вычисленная нейронной сетью, превышает это значение, данные классифицируются как аномалия.

### Опции:
* `--time-step <число>`: Размер "окна" или последовательности, которую нейронная сеть использует для анализа. Должен быть таким же, как при обучении. По умолчанию: 10.
* `--interval <секунды>`: Интервал агрегации метрик. Программа собирает данные в течение этого времени, а затем анализирует их. По умолчанию: 10.
* `--model-dir <папка>`: Директория, из которой будет загружена ранее сохраненная модель. По умолчанию: `models`.